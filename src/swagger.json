{
  "openapi": "3.0.2",
  "info": {
    "title": "Challenge 03",
    "description": "REST API for management of users and events",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:{port}/api/{version}",
      "variables": {
        "port": {
          "default": "3000"
        },
        "version": {
          "default": "v1",
          "enum": ["v1"]
        }
      }
    },
    {
      "url": "https://users-and-events-api.onrender.com/api/{version}",
      "variables": {
        "version": {
          "default": "v1",
          "enum": ["v1"]
        }
      }
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User routes"
    },
    {
      "name": "Event",
      "description": "Event routes"
    }
  ],
  "paths": {
    "/users/sign-up": {
      "post": {
        "summary": "Add a new user",
        "tags": ["User"],
        "requestBody": {
          "description": "User that needs to be added",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignUp"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "409": {
            "description": "Invalid Credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/sign-in": {
      "post": {
        "summary": "Login of an existing user",
        "tags": ["User"],
        "requestBody": {
          "description": "User that needs to be logged in",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggedUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create an event",
        "tags": ["Event"],
        "requestBody": {
          "description": "Event that needs to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEvent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get events",
        "tags": ["Event"],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "description": "Day of week",
            "schema": {
              "type": "string",
              "enum": ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of event",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "default": 7
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by",
            "schema": {
              "type": "string",
              "enum": ["description", "dayOfWeek", "-description", "-dayOfWeek"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes events from a specific Day of Week",
        "tags": ["Event"],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "description": "Day of week",
            "schema": {
              "type": "string",
              "enum": ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of deleted events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns an event from a specific id",
        "tags": ["Event"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Invalid event id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "404": {
            "description": "Event Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes an event from a specific id",
        "tags": ["Event"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Event id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Event Deleted"
          },
          "400": {
            "description": "Invalid event id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "404": {
            "description": "Event Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserSignUp": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "string"
          },
          "lastName": {
            "type": "string",
            "example": "string"
          },
          "birthDate": {
            "type": "string",
            "example": "2000-01-17"
          },
          "city": {
            "type": "string",
            "example": "string"
          },
          "country": {
            "type": "string",
            "example": "string"
          },
          "email": {
            "type": "string",
            "example": "string@email.com"
          },
          "password": {
            "type": "string",
            "example": "string"
          },
          "confirmPassword": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "UserSignIn": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "string@email.com"
          },
          "password": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "65921dbf0727153ccd9d133f"
          },
          "firstName": {
            "type": "string",
            "example": "string"
          },
          "lastName": {
            "type": "string",
            "example": "string"
          },
          "birthDate": {
            "type": "string",
            "example": "2000-01-17"
          },
          "city": {
            "type": "string",
            "example": "string"
          },
          "country": {
            "type": "string",
            "example": "string"
          },
          "email": {
            "type": "string",
            "example": "string@email.com"
          }
        }
      },
      "LoggedUser": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "string"
          },
          "lastName": {
            "type": "string",
            "example": "string"
          },
          "email": {
            "type": "string",
            "example": "string@email.com"
          },
          "token": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "CreateEvent": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "string"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65921dbf0727153ccd9d133f"
          },
          "description": {
            "type": "string",
            "example": "description"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]
          },
          "userId": {
            "type": "string",
            "example": "72151dbf065923ccd9d144a"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Validation Error"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "resource": {
                  "type": "string",
                  "example": "email"
                },
                "message": {
                  "type": "string",
                  "example": "The email provided, 'email', is not valid."
                }
              }
            }
          }
        }
      },
      "QueryValidationError": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Validation Error"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "resource": {
                  "type": "string",
                  "example": "month"
                },
                "message": {
                  "type": "string",
                  "example": "The resource 'month' is not allowed."
                }
              }
            }
          }
        }
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 500
          },
          "msg": {
            "type": "string",
            "example": "Something went wrong"
          },
          "error": {
            "type": "string",
            "example": "Internal Server Error"
          }
        }
      },
      "UnauthorizedError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 401
          },
          "msg": {
            "type": "string",
            "example": "Not Authenticated"
          },
          "error": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      },
      "NotFoundError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 404
          },
          "msg": {
            "type": "string",
            "example": "Not Found"
          },
          "error": {
            "type": "string",
            "example": "Not Found"
          }
        }
      },
      "ConflictError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 409
          },
          "msg": {
            "type": "string",
            "example": "Email already in use"
          },
          "error": {
            "type": "string",
            "example": "Conflict"
          }
        }
      },
      "BadRequestError": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400
          },
          "msg": {
            "type": "string",
            "example": "Invalid value provided"
          },
          "error": {
            "type": "string",
            "example": "Bad Request"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
